// Code generated by protoc-gen-go. DO NOT EDIT.
// source: socket.proto

package socket

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Socket struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ContainerName        string   `protobuf:"bytes,2,opt,name=containerName,proto3" json:"containerName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Socket) Reset()         { *m = Socket{} }
func (m *Socket) String() string { return proto.CompactTextString(m) }
func (*Socket) ProtoMessage()    {}
func (*Socket) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b39cc5e3943e1cc, []int{0}
}

func (m *Socket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Socket.Unmarshal(m, b)
}
func (m *Socket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Socket.Marshal(b, m, deterministic)
}
func (m *Socket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Socket.Merge(m, src)
}
func (m *Socket) XXX_Size() int {
	return xxx_messageInfo_Socket.Size(m)
}
func (m *Socket) XXX_DiscardUnknown() {
	xxx_messageInfo_Socket.DiscardUnknown(m)
}

var xxx_messageInfo_Socket proto.InternalMessageInfo

func (m *Socket) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Socket) GetContainerName() string {
	if m != nil {
		return m.ContainerName
	}
	return ""
}

type Response struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b39cc5e3943e1cc, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*Socket)(nil), "socket.Socket")
	proto.RegisterType((*Response)(nil), "socket.Response")
}

func init() { proto.RegisterFile("socket.proto", fileDescriptor_6b39cc5e3943e1cc) }

var fileDescriptor_6b39cc5e3943e1cc = []byte{
	// 168 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x29, 0xce, 0x4f, 0xce,
	0x4e, 0x2d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x83, 0xf0, 0x94, 0xec, 0xb8, 0xd8,
	0x82, 0xc1, 0x2c, 0x21, 0x3e, 0x2e, 0xa6, 0xcc, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xd6, 0x20,
	0xa6, 0xcc, 0x14, 0x21, 0x15, 0x2e, 0xde, 0xe4, 0xfc, 0xbc, 0x92, 0xc4, 0xcc, 0xbc, 0xd4, 0x22,
	0xbf, 0xc4, 0xdc, 0x54, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x54, 0x41, 0x25, 0x29, 0x2e,
	0x8e, 0xa0, 0xd4, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x90, 0x09, 0xf9, 0xd9, 0x60, 0x13, 0x38,
	0x82, 0x98, 0xf2, 0xb3, 0x8d, 0x3c, 0xb8, 0x78, 0x21, 0x66, 0x07, 0xa7, 0x16, 0x95, 0x65, 0x26,
	0xa7, 0x0a, 0x99, 0x73, 0x09, 0x7a, 0x24, 0xe6, 0xa5, 0xe4, 0xa4, 0x3a, 0x17, 0x94, 0x3a, 0xa6,
	0xa5, 0x65, 0xe6, 0x65, 0x96, 0x54, 0x0a, 0xf1, 0xe9, 0x41, 0x1d, 0x06, 0x51, 0x2b, 0x25, 0x00,
	0xe3, 0xc3, 0xcc, 0x55, 0x62, 0x48, 0x62, 0x03, 0x3b, 0xda, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff,
	0x99, 0x91, 0x2e, 0xc1, 0xc4, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SocketServiceClient is the client API for SocketService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SocketServiceClient interface {
	HandleCpuAffinity(ctx context.Context, in *Socket, opts ...grpc.CallOption) (*Response, error)
}

type socketServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSocketServiceClient(cc grpc.ClientConnInterface) SocketServiceClient {
	return &socketServiceClient{cc}
}

func (c *socketServiceClient) HandleCpuAffinity(ctx context.Context, in *Socket, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/socket.SocketService/HandleCpuAffinity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SocketServiceServer is the server API for SocketService service.
type SocketServiceServer interface {
	HandleCpuAffinity(context.Context, *Socket) (*Response, error)
}

// UnimplementedSocketServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSocketServiceServer struct {
}

func (*UnimplementedSocketServiceServer) HandleCpuAffinity(ctx context.Context, req *Socket) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HandleCpuAffinity not implemented")
}

func RegisterSocketServiceServer(s *grpc.Server, srv SocketServiceServer) {
	s.RegisterService(&_SocketService_serviceDesc, srv)
}

func _SocketService_HandleCpuAffinity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Socket)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SocketServiceServer).HandleCpuAffinity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/socket.SocketService/HandleCpuAffinity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SocketServiceServer).HandleCpuAffinity(ctx, req.(*Socket))
	}
	return interceptor(ctx, in, info, handler)
}

var _SocketService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "socket.SocketService",
	HandlerType: (*SocketServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "HandleCpuAffinity",
			Handler:    _SocketService_HandleCpuAffinity_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "socket.proto",
}
